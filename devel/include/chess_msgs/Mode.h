// Generated by gencpp from file chess_msgs/Mode.msg
// DO NOT EDIT!


#ifndef CHESS_MSGS_MESSAGE_MODE_H
#define CHESS_MSGS_MESSAGE_MODE_H

#include <ros/service_traits.h>


#include <chess_msgs/ModeRequest.h>
#include <chess_msgs/ModeResponse.h>


namespace chess_msgs
{

struct Mode
{

typedef ModeRequest Request;
typedef ModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Mode
} // namespace chess_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::chess_msgs::Mode > {
  static const char* value()
  {
    return "4d287144922458715666bf59b49316da";
  }

  static const char* value(const ::chess_msgs::Mode&) { return value(); }
};

template<>
struct DataType< ::chess_msgs::Mode > {
  static const char* value()
  {
    return "chess_msgs/Mode";
  }

  static const char* value(const ::chess_msgs::Mode&) { return value(); }
};


// service_traits::MD5Sum< ::chess_msgs::ModeRequest> should match 
// service_traits::MD5Sum< ::chess_msgs::Mode > 
template<>
struct MD5Sum< ::chess_msgs::ModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::chess_msgs::Mode >::value();
  }
  static const char* value(const ::chess_msgs::ModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::chess_msgs::ModeRequest> should match 
// service_traits::DataType< ::chess_msgs::Mode > 
template<>
struct DataType< ::chess_msgs::ModeRequest>
{
  static const char* value()
  {
    return DataType< ::chess_msgs::Mode >::value();
  }
  static const char* value(const ::chess_msgs::ModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::chess_msgs::ModeResponse> should match 
// service_traits::MD5Sum< ::chess_msgs::Mode > 
template<>
struct MD5Sum< ::chess_msgs::ModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::chess_msgs::Mode >::value();
  }
  static const char* value(const ::chess_msgs::ModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::chess_msgs::ModeResponse> should match 
// service_traits::DataType< ::chess_msgs::Mode > 
template<>
struct DataType< ::chess_msgs::ModeResponse>
{
  static const char* value()
  {
    return DataType< ::chess_msgs::Mode >::value();
  }
  static const char* value(const ::chess_msgs::ModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CHESS_MSGS_MESSAGE_MODE_H
